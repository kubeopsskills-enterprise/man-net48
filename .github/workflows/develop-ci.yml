name: Develop CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

env:
  APP_NAME: man-net48
  APP_CSPROJ: 
    
jobs:
  # unit_tests:
  #   name: Unit tests
  #   runs-on: windows-2019

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup MSBuild path
  #       uses: microsoft/setup-msbuild@v1.0.2

  #     - name: Setup NuGet
  #       uses: NuGet/setup-nuget@v1.0.5

  #     - uses: actions/cache@v2
  #       with:
  #         path: |
  #           %userprofile%\.nuget\packages
  #           %localappdata%\NuGet\v3-cache
  #           %temp%\NuGetScratch
  #           ${{ github.workspace }}\packages
  #           %localappdata%\NuGet\plugins-cache
  #         key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
  #         restore-keys: |
  #           ${{ runner.os }}-nuget-

  #     - name: Restore NuGet packages
  #       run: nuget restore

  #     - name: Build unit test projects
  #       run: msbuild .\UnitTestProject1\UnitTestProject1.csproj /nologo /verbosity:m /t:Build /p:Configuration=Release

  #     - name: Run unit tests
  #       run: |
  #         $path = C:\ProgramData\Chocolatey\bin\vswhere.exe -latest -products * -requires Microsoft.VisualStudio.Workload.ManagedDesktop Microsoft.VisualStudio.Workload.Web -requiresAny -property installationPath
  #         $path = join-path $path 'Common7\IDE\CommonExtensions\Microsoft\TestWindow\'
  #         $env:Path += ';'+$path
  #         mkdir unit-test-results
  #         vstest.console.exe  .\UnitTestProject1\bin\Release\UnitTestProject1.dll > unit-test-results.txt

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: unit-test-results
  #         path: unit-test-results.txt

  # codeql:
  #     name: CodeQL
  #     runs-on: windows-2019
  #     permissions:
  #       actions: read
  #       contents: read
  #       security-events: write

  #     strategy:
  #       fail-fast: false
  #       matrix:
  #         language: [ 'javascript', 'csharp' ]

  #     steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v1
  #       with:
  #         languages: ${{ matrix.language }}

  #     - uses: actions/cache@v2
  #       with:
  #         path: |
  #           %userprofile%\.nuget\packages
  #           %localappdata%\NuGet\v3-cache
  #           %temp%\NuGetScratch
  #           ${{ github.workspace }}\packages
  #           %localappdata%\NuGet\plugins-cache
  #         key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
  #         restore-keys: |
  #           ${{ runner.os }}-nuget-

  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v1

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v1

  # test:
  #   runs-on: windows-2019

  #   steps:
  #     - run: |
  #         ls env:\
  build:
    name: Build
    # needs: [unit_tests]
    # needs: [unit_tests, codeql]
    runs-on: windows-2019
    if: github.event_name != 'pull_request'
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
    
      - uses: actions/cache@v2
        with:
          path: |
            %userprofile%\.nuget\packages
            %localappdata%\NuGet\v3-cache
            %temp%\NuGetScratch
            ${{ github.workspace }}\packages
            %localappdata%\NuGet\plugins-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet packages
        run: nuget restore

      - name: Publish to folder
        run: msbuild .\SimpleNetFrame\SimpleNetFrame.csproj /nologo /verbosity:m /t:Build /t:pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir=$env:GITHUB_WORKSPACE"\published\"

      - run: |
          dir

      # - name: Upload artifact for deployment job
      #   run: |
      #     7z a artifact-${GITHUB_SHA}.zip D:\a\man-net48\man-net48\published\*

  #     - run: |
  #         dir
      #     az storage blob upload -c build -n artifact-${GITHUB_SHA}.zip -f ${GITHUB_WORKSPACE}\artifact-${GITHUB_SHA}.zip --connection-string "${{ secrets.STORAGE_ACCOUNT_CONNECTION_STRING }}"
      #     rm .\artifact-${GITHUB_SHA}.zip

      # - name: Upload artifact for deployment job
      # - name: Save artifact name to develop branch
      #   run: |
      #     echo artifact-${GITHUB_SHA}.zip > latest-build-artifact
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add .
      #     git commit -m "save latest artifact build name on Develop workflow [skip ci]"
      #     git push