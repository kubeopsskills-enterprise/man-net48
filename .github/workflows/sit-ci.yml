name: SIT CI

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:
      tags:
        description: 'tags'
        required: true 

jobs:
  retrieve_latest_artifact:
    name: Retrieve latest artifact
    runs-on: ubuntu-latest
    if: github.event.base_ref=='refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository (Triggered by tagging)
        if: github.event.base_ref=='refs/heads/main'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Checkout repository (Triggered manually)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Retrieve the tag (Tagging)
        if: github.event.base_ref=='refs/heads/main'
        run: |
          echo "retrieved_reference=${{ github.ref_name }}" >> $GITHUB_ENV
          echo ${{ github.ref_name }}

      - name: Retrieve the tag (Manually)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "retrieved_reference=${{ github.event.inputs.tags }}" >> $GITHUB_ENV
          echo ${{ github.event.inputs.tags }}

  test:
    needs: retrieve_latest_artifact
    runs-on: ubuntu-latest

    steps:
      - run: echo "${{ env.retrieved_reference }}" # This will output 'yellow'

      # - name: Investigate tagging
      #   run: |
      #     echo ${{ github.event.base_ref }}

      # - name: Investigate tagging
      #   run: |
      #     echo "Tags: ${{ github.event.inputs.tags }}" 

  #     - name: Retrieve latest artifact name
  #       id: artifact_name
  #       run: |
  #         ARTIFACT_NAME=$(cat latest-build-artifact)
  #         echo "::set-output name=artifact_name::"$ARTIFACT_NAME
  #     - name: Extract GitHub SHA
  #       id: sha
  #       run: |
  #         ARTIFACT_NAME=$(cat latest-build-artifact)
  #         SHA=$(echo $ARTIFACT_NAME | awk 'match($0,/artifact-([a-z0-9]*).zip/,a) {print a[1]}')
  #         echo "::set-output name=sha::"$SHA

  # dispatch-repository:
  #   name: Repository dispatch
  #   needs: retrieve_latest_artifact
  #   if: github.event.base_ref=='refs/heads/main' || github.event_name == 'workflow_dispatch'

  #   uses: kubeopsskills-enterprise/ais-share-pipeline/.github/workflows/repository-dispatch.yml@main
  #   with:
  #     REPOSITORY: 'kubeopsskills-enterprise/man-ng-pipeline'
  #     EVENT_TYPE: 'sit-ais-ng-repository-dispatch'
  #     SHA: ${{ needs.retrieve_latest_artifact.outputs.sha }}
  #   secrets:
  #     PAT : ${{ secrets.ORG_PAT  }}
