name: SIT CI

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:
      tags:
        description: 'tags'
        required: true 

env:
  APP_CSPROJ: .\SimpleNetFrame\SimpleNetFrame.csproj

jobs:
  build:
    name: Build
    runs-on: windows-2019
    if: github.event.base_ref=='refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    # outputs:
    #   output: ${{ steps.packing-artifact-release.outputs.release_version }}

    outputs:
      output1: ${{ steps.step1.outputs.test }}

    steps:
      - name: Set env (Triggered by tagging)
        if: github.event.base_ref=='refs/heads/main'
        run: |
          echo "RELEASE_VERSION=${{ github.ref_name }}"
          echo "RELEASE_VERSION=${{ github.ref_name }}" >> $env:GITHUB_ENV

      - name: Set env (Triggered by workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "RELEASE_VERSION=${{ github.event.inputs.tags }}"
          echo "RELEASE_VERSION=${{ github.event.inputs.tags }}" >> $env:GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_VERSION }}
        
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
    
      - uses: actions/cache@v2
        with:
          path: |
            %userprofile%\.nuget\packages
            %localappdata%\NuGet\v3-cache
            %temp%\NuGetScratch
            ${{ github.workspace }}\packages
            %localappdata%\NuGet\plugins-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet packages
        run: nuget restore

      - name: Publish to folder
        run: msbuild $env:APP_CSPROJ /nologo /verbosity:m /t:Build /t:pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir=$env:GITHUB_WORKSPACE"\published\"

      - name: Packing Arifact Files
        id: packing-artifact-release
        run: |
          7z a artifact-${{ secrets.MAN_NET48_APP_NAME }}-$env:RELEASE_VERSION.zip $env:GITHUB_WORKSPACE"\published\*"
          echo "::set-output name=release_version::"${{ env.RELEASE_VERSION }}

      - id: step1
        run: echo "::set-output name=test::"${{ env.RELEASE_VERSION }}
          
      - name: Upload Artifact Release
        uses: softprops/action-gh-release@v1
        with:
          files: .\artifact-${{ secrets.MAN_NET48_APP_NAME }}-${{ env.RELEASE_VERSION }}.zip
          tag_name: ${{ env.RELEASE_VERSION }}

  repository_dispatch:
    name: Repository dispatch
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - run: echo "retrieved_reference=${{needs.build.outputs.output1}}" >> $GITHUB_ENV
      - run: echo ${{needs.build.outputs.output1}}

      # - uses: actions/checkout@v3
      #   with:
      #     ref: ${{ env.retrieved_reference }}

      # - name: Repository dispatch
      #   run: |
      #     DISPATCH_BODY=$(jq '.event_type |= "sit-${{ secrets.MAN_NET48_APP_NAME }}-repository-dispatch" | .client_payload.git_reference |= "'${{ env.retrieved_reference }}'"' ./.github/template/env-repository-dispatch.json)
      #     echo $DISPATCH_BODY
      #     curl -v --location --request POST 'https://api.github.com/repos/kubeopsskills-enterprise/${{ secrets.MAN_NET48_APP_NAME }}-pipeline/dispatches' \
      #       --header 'Authorization: Bearer ${{ secrets.ORG_PAT }}' \
      #       --header 'accept: application/vnd.github.v3+json' \
      #       --header 'Content-Type: application/json' \
      #       --data-raw "$DISPATCH_BODY"